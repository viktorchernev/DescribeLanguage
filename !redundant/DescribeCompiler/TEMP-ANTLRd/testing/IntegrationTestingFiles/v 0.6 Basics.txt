This list explains the contents of the basic test files for Describe version 0.6 "Basics".

A. Basics

	This is about testing basic functionality in subtle variations - how the operators and whitespaces are handled.

	A_basic1.ds - We want to test a simple Describe list to start with.
	A_basic2.ds - Same thing, but we have one element in the list.
	A_basic3.ds - Same as before, but we have said one element on the same line as the title item.
	A_basic4.ds - Same as basic1.ds, but the indent is 4 spaces, instead of tab.
	A_twoRoots.ds - Two simple lists, with 4 spaces as indent.

B. Comments

	This section, of course, is about testing comments integration - line comments, block comments and issues
	that might arise from nested comments, operators in comments, etc.
	
	B_comments1.ds - This file contains a simple line comment.
	B_comments2.ds - This file contains the same line comment like before, but also a block comment.
	B_comments3.ds - Line and 2 block comments here, but block comments hide some functionality.
	B_comments4.ds - Two line comments, but file ends with a comment. This is problematic for GOLD.
	B_comments5.ds - Almost the same as `B_comments4.ds`, but the last comment is sticked to the last terminator.

C. Empty

	This section tests empty lists. Empty lists should be transpiled like they are single items, because they
	are just an item with a placeholder for a list.
	
	C_empty1.ds - A basic single empty production.
	C_empty2.ds - Same, but without white spaces.
	C_empty3.ds - Same but with more white space.
	C_empty4.ds - Same but with more white space in the form of a new line.

D. Characters

	Those files are testing strange escape sequences, strange characters, and characters that are part of
	other tokens - line '-', '\' and '/'.
	
	D_double_characters1.ds - This file contains hyphens, as those are a part of the producer `->`.
	D_double_characters2.ds - This file contains forward slashes, as those are a part of the comment starts `//`.
	D_double_characters3.ds - This file contains backslashes, as those are a part of escape sequences `\\`, `\->`, etc.
	D_escaped_double_characters1.ds - Escaped producers are tested here.
	D_escaped_double_characters2.ds - Various escape sequences are being tested here.
	D_escaped_double_characters3.ds - Escape-escape symbols `\\` are being tested.
	D_cyrillic.ds - A cyrilic list to test the handling of cyrilic characters.

E. Whitespaces

	Files in this group are testing for problems with whitespace handling.
	
	E_spaces_escapes_N.ds - This file contains a list with some escape sequences and various types of whitespaces. Linux line endings - `\n`.
	E_spaces_escapes_RN.ds - Same as above, but line endings are windows line endings - `\r\n`.
	
F. Productins

	The files in this group test different variations of nested and sibling productions - expressions inside expressions, etc.
	
	F_production_in_production1.ds - Simple nested production. The nested production is the first element.
	F_production_in_production2.ds - Simple nested production. The nested production is the last element.
	F_production_in_production3.ds - Simple nested production. The nested production is the middle element.
	F_production_in_production4.ds - Two simple nested productions. The nested production are first and second.
	F_production_in_production5.ds - Two simple nested productions. The nested production are last and second to last.
	F_production_in_production6.ds - Two levels of nesting.
	F_production_in_production7.ds - Two levels of nesting, both nested in the end of the file.

G. Benchmarking

	These files are significantly longer, and are used to benchmark the parser.

	G_long50 - Single production of 50 longer items.
	G_long100 - Single production of 100 longer items.
	
	
	
	//want to test a -> /* jsjsj */ ; or a -> /* jsjsj *//* jsjsj */ ; - will this create empty item from space only?