//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Describe08.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Describe08Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINE_COMMENT=1, BLOCK_COMMENT=2, TAG=3, LINK=4, HYPHEN=5, RIGHT_ARROW=6, 
		LEFT_ARROW=7, RIGHT_SQUARE=8, SEPARATOR=9, TERMINATOR=10, FORWARD_SLASHES=11, 
		FORWARD_SLASH=12, STAR=13, ESCAPE_ESCAPE=14, ESCAPE_HYPHEN=15, ESCAPE_RIGHT_ARROW=16, 
		ESCAPE_LEFT_ARROW=17, ESCAPE_RIGHT_SQUARE=18, ESCAPE_LEFT_SQUARE=19, ESCAPE_SEPARATOR=20, 
		ESCAPE_TERMINATOR=21, ESCAPE_LCOMMENT=22, ESCAPE_BCOMMENT=23, ESCAPE=24, 
		DATA=25;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LINESPACE", "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", 
		"HYPHEN", "RIGHT_ARROW", "LEFT_ARROW", "RIGHT_SQUARE", "SEPARATOR", "TERMINATOR", 
		"FORWARD_SLASHES", "FORWARD_SLASH", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", 
		"ESCAPE_RIGHT_ARROW", "ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", 
		"ESCAPE_SEPARATOR", "ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", 
		"ESCAPE", "DATA_CHAR", "DATA"
	};


	public Describe08Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Describe08Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINE_COMMENT", "BLOCK_COMMENT", "TAG", "LINK", "HYPHEN", "RIGHT_ARROW", 
		"LEFT_ARROW", "RIGHT_SQUARE", "SEPARATOR", "TERMINATOR", "FORWARD_SLASHES", 
		"FORWARD_SLASH", "STAR", "ESCAPE_ESCAPE", "ESCAPE_HYPHEN", "ESCAPE_RIGHT_ARROW", 
		"ESCAPE_LEFT_ARROW", "ESCAPE_RIGHT_SQUARE", "ESCAPE_LEFT_SQUARE", "ESCAPE_SEPARATOR", 
		"ESCAPE_TERMINATOR", "ESCAPE_LCOMMENT", "ESCAPE_BCOMMENT", "ESCAPE", "DATA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Describe08.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Describe08Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,25,302,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,1,0,1,
		0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,5,2,67,8,2,10,2,12,2,70,9,2,1,2,3,2,73,8,
		2,1,2,1,2,5,2,77,8,2,10,2,12,2,80,9,2,1,2,3,2,83,8,2,1,2,1,2,1,3,1,3,1,
		3,1,3,5,3,91,8,3,10,3,12,3,94,9,3,1,3,1,3,1,3,1,3,5,3,100,8,3,10,3,12,
		3,103,9,3,1,3,3,3,106,8,3,1,3,1,3,1,4,1,4,4,4,112,8,4,11,4,12,4,113,1,
		4,1,4,5,4,118,8,4,10,4,12,4,121,9,4,1,5,1,5,5,5,125,8,5,10,5,12,5,128,
		9,5,1,5,1,5,5,5,132,8,5,10,5,12,5,135,9,5,1,6,1,6,1,7,1,7,5,7,141,8,7,
		10,7,12,7,144,9,7,1,8,1,8,5,8,148,8,8,10,8,12,8,151,9,8,1,9,1,9,5,9,155,
		8,9,10,9,12,9,158,9,9,1,10,1,10,5,10,162,8,10,10,10,12,10,165,9,10,1,11,
		1,11,5,11,169,8,11,10,11,12,11,172,9,11,1,12,1,12,1,12,1,12,5,12,178,8,
		12,10,12,12,12,181,9,12,1,13,1,13,5,13,185,8,13,10,13,12,13,188,9,13,1,
		14,1,14,5,14,192,8,14,10,14,12,14,195,9,14,1,15,1,15,1,15,1,15,5,15,201,
		8,15,10,15,12,15,204,9,15,1,16,1,16,1,16,1,16,5,16,210,8,16,10,16,12,16,
		213,9,16,1,17,1,17,1,17,1,17,5,17,219,8,17,10,17,12,17,222,9,17,1,18,1,
		18,1,18,1,18,5,18,228,8,18,10,18,12,18,231,9,18,1,19,1,19,1,19,1,19,5,
		19,237,8,19,10,19,12,19,240,9,19,1,20,1,20,1,20,1,20,5,20,246,8,20,10,
		20,12,20,249,9,20,1,21,1,21,1,21,1,21,5,21,255,8,21,10,21,12,21,258,9,
		21,1,22,1,22,1,22,1,22,5,22,264,8,22,10,22,12,22,267,9,22,1,23,1,23,1,
		23,1,23,1,23,5,23,274,8,23,10,23,12,23,277,9,23,1,24,1,24,1,24,1,24,1,
		24,5,24,284,8,24,10,24,12,24,287,9,24,1,25,1,25,5,25,291,8,25,10,25,12,
		25,294,9,25,1,26,1,26,1,27,4,27,299,8,27,11,27,12,27,300,4,68,92,113,126,
		0,28,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,
		12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,
		24,53,0,55,25,1,0,3,11,0,9,9,11,13,32,32,133,133,160,160,5760,5760,8192,
		8202,8232,8233,8239,8239,8287,8287,12288,12288,10,0,9,13,32,32,133,133,
		160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,
		6,0,42,42,44,45,47,47,59,60,62,62,91,93,329,0,5,1,0,0,0,0,7,1,0,0,0,0,
		9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
		0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
		31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
		0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
		0,55,1,0,0,0,1,57,1,0,0,0,3,59,1,0,0,0,5,61,1,0,0,0,7,86,1,0,0,0,9,109,
		1,0,0,0,11,122,1,0,0,0,13,136,1,0,0,0,15,138,1,0,0,0,17,145,1,0,0,0,19,
		152,1,0,0,0,21,159,1,0,0,0,23,166,1,0,0,0,25,173,1,0,0,0,27,182,1,0,0,
		0,29,189,1,0,0,0,31,196,1,0,0,0,33,205,1,0,0,0,35,214,1,0,0,0,37,223,1,
		0,0,0,39,232,1,0,0,0,41,241,1,0,0,0,43,250,1,0,0,0,45,259,1,0,0,0,47,268,
		1,0,0,0,49,278,1,0,0,0,51,288,1,0,0,0,53,295,1,0,0,0,55,298,1,0,0,0,57,
		58,7,0,0,0,58,2,1,0,0,0,59,60,7,1,0,0,60,4,1,0,0,0,61,62,5,47,0,0,62,63,
		5,47,0,0,63,64,5,32,0,0,64,68,1,0,0,0,65,67,9,0,0,0,66,65,1,0,0,0,67,70,
		1,0,0,0,68,69,1,0,0,0,68,66,1,0,0,0,69,82,1,0,0,0,70,68,1,0,0,0,71,73,
		5,13,0,0,72,71,1,0,0,0,72,73,1,0,0,0,73,74,1,0,0,0,74,78,5,10,0,0,75,77,
		3,3,1,0,76,75,1,0,0,0,77,80,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,83,
		1,0,0,0,80,78,1,0,0,0,81,83,5,0,0,1,82,72,1,0,0,0,82,81,1,0,0,0,83,84,
		1,0,0,0,84,85,6,2,0,0,85,6,1,0,0,0,86,87,5,47,0,0,87,88,5,42,0,0,88,92,
		1,0,0,0,89,91,9,0,0,0,90,89,1,0,0,0,91,94,1,0,0,0,92,93,1,0,0,0,92,90,
		1,0,0,0,93,105,1,0,0,0,94,92,1,0,0,0,95,96,5,42,0,0,96,97,5,47,0,0,97,
		101,1,0,0,0,98,100,3,3,1,0,99,98,1,0,0,0,100,103,1,0,0,0,101,99,1,0,0,
		0,101,102,1,0,0,0,102,106,1,0,0,0,103,101,1,0,0,0,104,106,5,0,0,1,105,
		95,1,0,0,0,105,104,1,0,0,0,106,107,1,0,0,0,107,108,6,3,0,0,108,8,1,0,0,
		0,109,111,5,60,0,0,110,112,9,0,0,0,111,110,1,0,0,0,112,113,1,0,0,0,113,
		114,1,0,0,0,113,111,1,0,0,0,114,115,1,0,0,0,115,119,5,62,0,0,116,118,3,
		3,1,0,117,116,1,0,0,0,118,121,1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,
		120,10,1,0,0,0,121,119,1,0,0,0,122,126,5,91,0,0,123,125,9,0,0,0,124,123,
		1,0,0,0,125,128,1,0,0,0,126,127,1,0,0,0,126,124,1,0,0,0,127,129,1,0,0,
		0,128,126,1,0,0,0,129,133,5,93,0,0,130,132,3,3,1,0,131,130,1,0,0,0,132,
		135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,12,1,0,0,0,135,133,1,0,
		0,0,136,137,5,45,0,0,137,14,1,0,0,0,138,142,5,62,0,0,139,141,3,3,1,0,140,
		139,1,0,0,0,141,144,1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,16,1,0,
		0,0,144,142,1,0,0,0,145,149,5,60,0,0,146,148,3,3,1,0,147,146,1,0,0,0,148,
		151,1,0,0,0,149,147,1,0,0,0,149,150,1,0,0,0,150,18,1,0,0,0,151,149,1,0,
		0,0,152,156,5,93,0,0,153,155,3,3,1,0,154,153,1,0,0,0,155,158,1,0,0,0,156,
		154,1,0,0,0,156,157,1,0,0,0,157,20,1,0,0,0,158,156,1,0,0,0,159,163,5,44,
		0,0,160,162,3,3,1,0,161,160,1,0,0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,
		164,1,0,0,0,164,22,1,0,0,0,165,163,1,0,0,0,166,170,5,59,0,0,167,169,3,
		3,1,0,168,167,1,0,0,0,169,172,1,0,0,0,170,168,1,0,0,0,170,171,1,0,0,0,
		171,24,1,0,0,0,172,170,1,0,0,0,173,174,5,47,0,0,174,175,5,47,0,0,175,179,
		1,0,0,0,176,178,3,3,1,0,177,176,1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,
		0,179,180,1,0,0,0,180,26,1,0,0,0,181,179,1,0,0,0,182,186,5,47,0,0,183,
		185,3,3,1,0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,1,
		0,0,0,187,28,1,0,0,0,188,186,1,0,0,0,189,193,5,42,0,0,190,192,3,3,1,0,
		191,190,1,0,0,0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,30,
		1,0,0,0,195,193,1,0,0,0,196,197,5,92,0,0,197,198,5,92,0,0,198,202,1,0,
		0,0,199,201,3,3,1,0,200,199,1,0,0,0,201,204,1,0,0,0,202,200,1,0,0,0,202,
		203,1,0,0,0,203,32,1,0,0,0,204,202,1,0,0,0,205,206,5,92,0,0,206,207,5,
		45,0,0,207,211,1,0,0,0,208,210,3,3,1,0,209,208,1,0,0,0,210,213,1,0,0,0,
		211,209,1,0,0,0,211,212,1,0,0,0,212,34,1,0,0,0,213,211,1,0,0,0,214,215,
		5,92,0,0,215,216,5,62,0,0,216,220,1,0,0,0,217,219,3,3,1,0,218,217,1,0,
		0,0,219,222,1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,0,221,36,1,0,0,0,222,
		220,1,0,0,0,223,224,5,92,0,0,224,225,5,60,0,0,225,229,1,0,0,0,226,228,
		3,3,1,0,227,226,1,0,0,0,228,231,1,0,0,0,229,227,1,0,0,0,229,230,1,0,0,
		0,230,38,1,0,0,0,231,229,1,0,0,0,232,233,5,92,0,0,233,234,5,93,0,0,234,
		238,1,0,0,0,235,237,3,3,1,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,
		0,0,0,238,239,1,0,0,0,239,40,1,0,0,0,240,238,1,0,0,0,241,242,5,92,0,0,
		242,243,5,91,0,0,243,247,1,0,0,0,244,246,3,3,1,0,245,244,1,0,0,0,246,249,
		1,0,0,0,247,245,1,0,0,0,247,248,1,0,0,0,248,42,1,0,0,0,249,247,1,0,0,0,
		250,251,5,92,0,0,251,252,5,44,0,0,252,256,1,0,0,0,253,255,3,3,1,0,254,
		253,1,0,0,0,255,258,1,0,0,0,256,254,1,0,0,0,256,257,1,0,0,0,257,44,1,0,
		0,0,258,256,1,0,0,0,259,260,5,92,0,0,260,261,5,59,0,0,261,265,1,0,0,0,
		262,264,3,3,1,0,263,262,1,0,0,0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,
		1,0,0,0,266,46,1,0,0,0,267,265,1,0,0,0,268,269,5,92,0,0,269,270,5,47,0,
		0,270,271,5,47,0,0,271,275,1,0,0,0,272,274,3,3,1,0,273,272,1,0,0,0,274,
		277,1,0,0,0,275,273,1,0,0,0,275,276,1,0,0,0,276,48,1,0,0,0,277,275,1,0,
		0,0,278,279,5,92,0,0,279,280,5,47,0,0,280,281,5,42,0,0,281,285,1,0,0,0,
		282,284,3,3,1,0,283,282,1,0,0,0,284,287,1,0,0,0,285,283,1,0,0,0,285,286,
		1,0,0,0,286,50,1,0,0,0,287,285,1,0,0,0,288,292,5,92,0,0,289,291,3,3,1,
		0,290,289,1,0,0,0,291,294,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,
		52,1,0,0,0,294,292,1,0,0,0,295,296,8,2,0,0,296,54,1,0,0,0,297,299,3,53,
		26,0,298,297,1,0,0,0,299,300,1,0,0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,
		56,1,0,0,0,32,0,68,72,78,82,92,101,105,113,119,126,133,142,149,156,163,
		170,179,186,193,202,211,220,229,238,247,256,265,275,285,292,300,1,6,0,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
